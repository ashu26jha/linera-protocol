window.SIDEBAR_ITEMS = {"attr":[["ComplexObject","Define a complex GraphQL object for SimpleObject’s complex field resolver."],["Directive","Define a directive for query."],["Object","Define a GraphQL object with methods"],["Scalar","Define a Scalar"],["Subscription","Define a GraphQL subscription"]],"derive":[["Description","Attach a description to `Object`, `Scalar` or `Subscription`."],["Enum","Define a GraphQL enum"],["InputObject","Define a GraphQL input object"],["Interface","Define a GraphQL interface"],["MergedObject","Define a merged object with multiple object types."],["MergedSubscription","Define a merged subscription with multiple subscription types."],["NewType","Define a NewType Scalar"],["OneofObject","Define a GraphQL oneof input object"],["SimpleObject","Define a GraphQL object with fields"],["Union","Define a GraphQL union"]],"enum":[["BatchRequest","Batch support for GraphQL requests, which is either a single query, or an array of queries"],["BatchResponse","Response for batchable queries"],["IntrospectionMode","Introspection mode"],["ParseRequestError","An error parsing the request."],["PathSegment","A segment of path to a resolver."],["ValidationMode","Validation mode"],["Value","A resolved GraphQL value, for example `1` or `\"Hello World!\"`."]],"fn":[["from_value","Interpret a `ConstValue` as an instance of type `T`."],["to_value","Convert a `T` into `ConstValue` which is an enum that can represent any valid GraphQL data."]],"macro":[["scalar","Define a scalar"],["value","Construct a `ConstValue`."]],"mod":[["context","Query context."],["extensions","Extensions for schema"],["http","A helper module that supports HTTP"],["resolver_utils","Utilities for implementing `OutputType::resolve`."],["types","Useful GraphQL types."]],"struct":[["CacheControl","Cache control value"],["DeserializerError","This type represents errors that can occur when deserializing."],["Error","An error with a message and optional extensions."],["ErrorExtensionValues","Extensions to the error."],["InputValueError","An error parsing an input value."],["Lookahead","A selection performed by a query."],["Name","A GraphQL name."],["Number","Represents a JSON number, whether integer or floating point."],["Request","GraphQL request."],["Response","Query response"],["SDLExportOptions","Options for SDL export"],["Schema","GraphQL schema."],["SchemaBuilder","Schema builder"],["SerializerError","This type represents errors that can occur when serializing."],["ServerError","An error in a GraphQL server."],["ValidationResult","Validation results."],["Variables","Variables of a query."]],"trait":[["CustomDirective","Represents a custom directive."],["CustomValidator","Represents a custom input value validator."],["ErrorExtensions","An error which can be extended into a `Error`."],["Executor","Represents a GraphQL executor"],["Guard","Field guard"],["GuardExt","An extension trait for `Guard`."],["InputObjectType","A GraphQL input object."],["InputType","Represents a GraphQL input type."],["InterfaceType","A GraphQL interface."],["ObjectType","A GraphQL object."],["OneofObjectType","A GraphQL oneof input object."],["OutputType","Represents a GraphQL output type."],["ResultExt","Extend a `Result`’s error value with `ErrorExtensions`."],["SubscriptionType","A GraphQL subscription object"],["TypeName","Used to specify the GraphQL Type name."],["UnionType","A GraphQL interface."]],"type":[["FieldError","An alias of async_graphql::Error. Present for backward compatibility reasons."],["FieldResult","An alias of async_graphql::Result. Present for backward compatibility reasons."],["InputValueResult","An error parsing a value of type `T`."],["Result","An alias for `Result<T, Error>`."],["ServerResult","Alias for `Result<T, ServerError>`."]]};