window.SIDEBAR_ITEMS = {"enum":[["Destination","The destination of a message, relative to a particular application."]],"fn":[["hex_debug","Prints a vector of bytes in hexadecimal."]],"macro":[["contract","Declares an implementation of the [`Contract`][`crate::Contract`] trait, exporting it from the WASM module."],["ensure",""],["export_contract","Declares the export of the interface for the given type."],["export_service","Declares the export of the interface for the given type."],["instance_exported_future","Declares a type exporting a future declared as a WIT type."],["service","Declares an implementation of the [`Service`][`crate::Service`] trait, exporting it from the WASM module."]],"mod":[["contract",""],["crypto",""],["service",""]],"struct":[["ApplicationCallResult","The result of calling into a user application."],["ApplicationId","A unique identifier for an application."],["BlockHeight","A block height to identify blocks in a chain."],["BytecodeId","A unique identifier for an application bytecode."],["CalleeContext",""],["ChainId","The unique identifier (UID) of a chain. This is the hash value of a ChainDescription."],["ChannelName","The name of a subscription channel."],["ContractLogger","A logger that uses the system API for contracts."],["CryptoHash","A Sha3-256 value."],["EffectContext",""],["EffectId","The index of an effect in a chain."],["ExecutionResult","Externally visible results of an execution. These results are meant in the context of the application that created them."],["ExportedFuture","A future thatâ€™s exported from a guest WASM module to the host."],["OperationContext",""],["QueryContext",""],["ServiceLogger","A logger that uses the system API for services."],["Session","Syscall to request creating a new session."],["SessionCallResult","The result of calling into a session."],["SessionId","The identifier of a session."],["SimpleStateStorage","A simple state management runtime using a single byte array."],["SystemBalance","The balance of a chain."],["Timestamp","A timestamp, in microseconds since the Unix epoch."],["ViewStateStorage","A state management runtime based on `linera-views`."]],"trait":[["BcsSignable","Activate the blanket implementation of `Signable` based on serde and BCS."],["Contract","The public entry points provided by a contract."],["FromBcsBytes",""],["Service","The public entry points provided by a service."]]};