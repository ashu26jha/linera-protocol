window.SIDEBAR_ITEMS = {"constant":[["MAX_CONTAINER_DEPTH","Maximal allowed depth of BCS data, counting only structs and enums."],["MAX_SEQUENCE_LENGTH","Variable length sequences in BCS are limited to max length of 2^31 - 1."]],"enum":[["Error",""]],"fn":[["from_bytes","Deserializes a `&[u8]` into a type."],["from_bytes_seed","Perform a stateful deserialization from a `&[u8]` using the provided `seed`."],["from_bytes_seed_with_limit","Same as `from_bytes_seed` but use `limit` as max container depth instead of MAX_CONTAINER_DEPTH`Note that`limit` has to be lower than MAX_CONTAINER_DEPTH"],["from_bytes_with_limit","Same as `from_bytes` but use `limit` as max container depth instead of MAX_CONTAINER_DEPTH`Note that`limit` has to be lower than MAX_CONTAINER_DEPTH"],["is_human_readable",""],["serialize_into","Same as `to_bytes` but write directly into an `std::io::Write` object."],["serialize_into_with_limit","Same as `serialize_into` but use `limit` as max container depth instead of MAX_CONTAINER_DEPTH Note that `limit` has to be lower than MAX_CONTAINER_DEPTH"],["serialized_size","Same as `to_bytes` but only return the size of the serialized bytes."],["serialized_size_with_limit","Same as `serialized_size` but use `limit` as max container depth instead of MAX_CONTAINER_DEPTH Note that `limit` has to be lower than MAX_CONTAINER_DEPTH"],["to_bytes","Serialize the given data structure as a `Vec<u8>` of BCS."],["to_bytes_with_limit","Same as `to_bytes` but use `limit` as max container depth instead of MAX_CONTAINER_DEPTH Note that `limit` has to be lower than MAX_CONTAINER_DEPTH"]],"mod":[["test_helpers",""]],"type":[["Result",""]]};