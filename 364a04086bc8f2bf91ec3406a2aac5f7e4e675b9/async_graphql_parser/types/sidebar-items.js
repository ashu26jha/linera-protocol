window.SIDEBAR_ITEMS = {"enum":[["BaseType","A GraphQL base type, for example `String` or `[String!]`. This does not include whether the type is nullable; for that see Type."],["DirectiveLocation","Where a directive can apply to."],["DocumentOperations","The operations of a GraphQL document."],["OperationType","The type of an operation; `query`, `mutation` or `subscription`."],["Selection","A part of an object to be selected; a single field, a fragment spread or an inline fragment."],["TypeKind","A kind of type; scalar, object, enum, etc."],["TypeSystemDefinition","A definition concerning the type system of a GraphQL service."]],"struct":[["ConstDirective","A const GraphQL directive, such as `@deprecated(reason: \"Use the other field)`. This differs from `Directive` in that it uses `ConstValue` instead of `Value`."],["Directive","A GraphQL directive, such as `@deprecated(reason: \"Use the other field\")`."],["DirectiveDefinition","The definition of a directive in a service."],["EnumType","The definition of an enum."],["EnumValueDefinition","The definition of a value inside an enum."],["ExecutableDocument","An executable GraphQL file or request string."],["Field","A field being selected on an object, such as `name` or `weightKilos: weight(unit: KILOGRAMS)`."],["FieldDefinition","The definition of a field inside an object or interface."],["FragmentDefinition","The definition of a fragment, such as `fragment userFields on User { name age }`."],["FragmentSpread","A fragment selector, such as `... userFields`."],["InlineFragment","An inline fragment selector, such as `... on User { name }`."],["InputObjectType","The definition of an input object."],["InputValueDefinition","The definition of an input value inside the arguments of a field."],["InterfaceType","The definition of an interface type."],["ObjectType","The definition of an object type."],["OperationDefinition","A GraphQL operation, such as `mutation($content:String!) { makePost(content: $content) { id } }`."],["OperationsIter","An iterator over the operations of a document."],["SchemaDefinition","The definition of the schema in a GraphQL service."],["SelectionSet","A set of fields to be selected, for example `{ name age }`."],["ServiceDocument","A GraphQL file or request string defining a GraphQL service."],["Type","A GraphQL type, for example `String` or `[String!]!`."],["TypeCondition","A type a fragment can apply to (`on` followed by the type)."],["TypeDefinition","The definition of a type in a GraphQL service."],["UnionType","The definition of a union type."],["VariableDefinition","A variable definition inside a list of variable definitions, for example `$name:String!`."]]};