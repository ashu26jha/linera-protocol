window.SIDEBAR_ITEMS = {"mod":[["chain_info_result","Nested message and enum types in `ChainInfoResult`."],["cross_chain_request","Nested message and enum types in `CrossChainRequest`."],["notifier_service_client","Generated client implementations."],["notifier_service_server","Generated server implementations."],["validator_node_client","Generated client implementations."],["validator_node_server","Generated server implementations."],["validator_worker_client","Generated client implementations."],["validator_worker_server","Generated server implementations."]],"struct":[["BlockHeight",""],["BlockProposal","An authenticated proposal for a new block."],["Certificate","A certified statement from the committee."],["CertificateWithDependencies","A certified statement from the committee, together with other certificates required for execution."],["ChainId",""],["ChainInfoQuery","Message to obtain information on a chain."],["ChainInfoResponse","Response to `ChainInfoQuery`"],["ChainInfoResult","A wrapper around ChainInfoResponse which contains a serialized error variant"],["ConfirmUpdatedRecipient","Acknowledge the height of the highest confirmed blocks communicated with `UpdateRecipient`."],["CrossChainRequest","An internal message between chains within a validator."],["LiteCertificate","A certified statement from the committee, without the value."],["Notification","Notify that a chain has a new certified block or a new message."],["Owner",""],["PublicKey",""],["Signature",""],["SubscriptionRequest","A request for client to subscribe to notifications for a given `ChainId`"],["UpdateRecipient","Communicate a number of confirmed blocks from the sender to the recipient. Blocks must be given by increasing heights."]]};